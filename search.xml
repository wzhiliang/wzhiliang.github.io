<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello Hexo</title>
    <url>/2020/11/07/Hello-Hexo/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>读书笔记之《高性能JavaScript》</title>
    <url>/2020/11/13/book-notes/</url>
    <content><![CDATA[<h2 id="第1章-加载和运行"><a href="#第1章-加载和运行" class="headerlink" title="第1章  加载和运行"></a>第1章  加载和运行</h2><blockquote>
<p>管理浏览器中的JavaScript代码是个棘手的问题，因为代码执行过程会阻塞浏览器的其他进程，比如用户界面绘制。每次遇到 &lt; script &gt;标签，页面都必须停下来等待代码下载（如果是外链文件）并执行，然后继续处理其他部分。尽管如此，还是有几种方法能减少JavaScript对性能的影响：</p>
</blockquote>
<ul>
<li>&lt;/ body&gt;闭合标签之前，将所有的&lt; script&gt;标签放到页面底部。这能确保在脚本执行前页面已经完成渲染。</li>
<li>合并脚本。页面中的&lt; script&gt;标签越少，加载也就越快，响应也更迅速。无论外链文件还是内嵌脚本都是如此。</li>
<li>有多种无阻塞下载JavaScript的办法：<ul>
<li>使用&lt; script&gt;标签的defer属性；</li>
<li>使用动态创建&lt; script&gt;元素来下载并执行代码；</li>
<li>使用XHR对象下载JavaScript代码并注入页面中；</li>
</ul>
</li>
</ul>
<p>通过以上策略，可以极大提高那些需要使用大量JavaScript的Web应用的实际性能。</p>
<h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><p>推荐书籍：<br>《高性能网站建设》<br>《高性能网站建设进阶指南》  </p>
<p>推荐代码仓：<br>YUI3、LazyLoad、LABjs  </p>
<blockquote>
<p>这些代码仓可以学习下思想，分析下优劣，实际项目中不一定要使用</p>
</blockquote>
<h2 id="第2章-数据存取"><a href="#第2章-数据存取" class="headerlink" title="第2章  数据存取"></a>第2章  数据存取</h2><blockquote>
<p>在JavaScript中，数据存储的位置会对代码整体性能产生重大的影响。数据存储共有4种方式：字面量、变量、数组项、对象成员。它们有着各自的性能特点。</p>
</blockquote>
<ul>
<li>访问字面量和局部变量的速度最快，相反，访问数组元素和对象成员相对较慢。</li>
<li>由于局部变量存在于作用域的起始位置，因此访问局部变量比访问跨作用域变量更快。变量在作用域链中的位置越深，访问所需时间就越长。由于全局变量总处在作用域链的最末端，因此访问速度也是最慢的。</li>
<li>避免使用with语句，因为它会改变执行环境作用域链。同样，try-catch语句中的catch子句也有同样的影响，因此也要小心使用。</li>
<li>嵌套的对象成员会明显影响性能，尽量少用。</li>
<li>属性或方法在原型链中的位置越深，访问它的速度也越慢。</li>
<li>通常来说，你可以通过把常用的对象成员、数组元素、跨域变量保存在局部变量中来改善JavaScript性能，因为局部变量访问速度最快。</li>
</ul>
<blockquote>
<p>通过以上策略，你可以显著提升那些需要使用大量JavaScript的Web应用的实际性能。</p>
</blockquote>
<h2 id="第3章-DOM编程"><a href="#第3章-DOM编程" class="headerlink" title="第3章  DOM编程"></a>第3章  DOM编程</h2><blockquote>
<p>访问和操作DOM是现代Web应用的重要部分。但每次穿越链接ECMAScript和DOM连个岛屿之间的桥梁，都会被收取“过桥费”。为了减少DOM编程带来的性能损失，请记住以下几点：</p>
</blockquote>
<ul>
<li>最小化DOM访问次数，尽可能在JavaScript端处理。</li>
<li>如果需要多次访问某个DOM节点，请使用局部变量存储它的引用。</li>
<li>小心处理HTML集合，因为它是实时连系着底层文档。把集合的长度缓存到一个变量中，并在迭代中使用它。如果需要经常操作集合，建议把它拷贝到一个数组中。</li>
<li>如果可能的话，使用速度更快的API，比如querySelectorAll()和firstElementChild。</li>
<li>要留意重排和重绘：批量修改样式时，“离线”操作DOM树，使用缓存，并减少访问布局信息的次数。</li>
<li>动画中使用绝对定位，使用拖放代理。</li>
<li>使用事件委托来减少事件处理器的数量。</li>
</ul>
]]></content>
      <categories>
        <category>读书</category>
      </categories>
      <tags>
        <tag>读书</tag>
        <tag>笔记</tag>
        <tag>摘录</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Github的Markdown语法简明汇总</title>
    <url>/2020/11/09/github-markdown/</url>
    <content><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><h3 id="1-1-研究目的"><a href="#1-1-研究目的" class="headerlink" title="1.1 研究目的"></a>1.1 研究目的</h3><p>充分利用Markdown的特性创作出结构清晰、逻辑性强的技术博文，一来可以作为个人笔记以便不时之需，二来可以加强对Markdown的深入理解。</p>
<h3 id="1-2-Github"><a href="#1-2-Github" class="headerlink" title="1.2 Github"></a>1.2 Github</h3><p>Github作为全球最具影响力的程序员社区，汇集了全球顶尖程序员，孵化出种类繁多的程序、项目、产品。你可以在上面研究、学习各种源码，你可以创建自己的项目和博客。</p>
<p>Github中项目的说明文档、更新文档、Issue、Comment等模块都支持MarkDown，所以作为Github社区里的一员，有必要深入学习下MarkDown文本标记语言。</p>
<h3 id="1-3-Markdown"><a href="#1-3-Markdown" class="headerlink" title="1.3 Markdown"></a>1.3 Markdown</h3><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML/HTML文档。  </p>
<p>Markdown格式化语法的首要设计目标是使其尽可能地可读。这个想法是，Markdown格式的文档应该以纯文本形式原样发布，而不会看起来像被标签或格式说明所标记。</p>
<p>MarkDown特性</p>
<ul>
<li>轻量级</li>
<li>易读易写</li>
<li>支持图片、图表、数学式等</li>
</ul>
<p>基于以上特性，现在很多主流的网站都广泛的使用Markdown来撰写版主文档等。</p>
<p>发展历程</p>
<ul>
<li>标准化：2016年3月发布了RFC 7763和RFC 7764。RFC 7763 从原始变体引入了MIME类型 text/markdown。RFC 7764讨论并注册了MultiMarkdown、GitHub Flavored Markdown (GFM)、Pandoc、CommonMark及Markdown等变体。</li>
<li>CommonMark：CommonMark发布了规范、参考实现和测试包的几个版本，并计划在2018年宣布最终的1.0规范和测试包。</li>
<li>GFM：2017年，GitHub发布了基于CommonMark的GitHub Flavored Markdown（GFM）的正式规范。</li>
<li>Markdown Extra：Markdown Extra是一种轻量级标记语言，基于在PHP（最初）、Python和Ruby中实现的Markdown。</li>
</ul>
<h3 id="1-4-Github的Markdown"><a href="#1-4-Github的Markdown" class="headerlink" title="1.4 Github的Markdown"></a>1.4 Github的Markdown</h3><p>GitHub结合了标准的MarkDown语法，加入Github风格的特性，称为GitHub Flavored MarkDown，具有一些独特的写作功能。</p>
<p>Github基于CommonMark Spec，是CommonMark的严格超集，形成带有Github风格的Markdown语法，称为Github Flavored Markdown，简称GFM。</p>
<p>除了表格、删除线、自动链接和任务列表被Github规范作为扩展添加外，GFM遵循CommonMark规范。GitHub还相应地更改了其站点上使用的解析器，这要求更改某些文档 - 例如，GFM现在要求创建标题的哈希符号由空格字符分隔。  </p>
<p>尽管GFM支持各种输入，但值得注意的是，在GFM转换为HTML之后，GitHub.com和GitHub Enterprise会执行其他后处理和清理操作，以确保网站的安全性和一致性。</p>
<h2 id="二、语法"><a href="#二、语法" class="headerlink" title="二、语法"></a>二、语法</h2><h3 id="2-1-CommonMark"><a href="#2-1-CommonMark" class="headerlink" title="2.1 CommonMark"></a>2.1 CommonMark</h3><p><img src="https://wzhiliang.github.io/images/commonmark.png" alt="CommonMark"></p>
<h3 id="2-2-GFM"><a href="#2-2-GFM" class="headerlink" title="2.2 GFM"></a>2.2 GFM</h3><table>
<thead>
<tr>
<th>Type</th>
<th>sample</th>
<th>to Get</th>
</tr>
</thead>
<tbody><tr>
<td>标题</td>
<td>## 标题</td>
<td><h2>标题</h2></td>
</tr>
<tr>
<td>文本</td>
<td>文本</td>
<td>文本</td>
</tr>
</tbody></table>
<h2 id="三、参考链接"><a href="#三、参考链接" class="headerlink" title="三、参考链接"></a>三、参考链接</h2><p><a href="https://commonmark.org/">CommonMark</a></p>
<p><a href="https://baike.baidu.com/item/markdown/3245829?fr=aladdin">Markdown百科</a>  </p>
<p><a href="https://docs.github.com/cn/free-pro-team@latest/github/writing-on-github/basic-writing-and-formatting-syntax">GitHub官方MarkDown语法链接</a>  </p>
<p><a href="https://github.github.com/gfm/">GFM</a>  </p>
<p><a href="https://daringfireball.net/projects/markdown/syntax#backslash">Daring Fireball</a></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Markdown</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/07/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>如何使用hexo+next搭建github个人博客</title>
    <url>/2020/11/08/hexo/</url>
    <content><![CDATA[<h3 id="搭建github个人博客"><a href="#搭建github个人博客" class="headerlink" title="搭建github个人博客"></a>搭建github个人博客</h3>]]></content>
      <categories>
        <category>开源 建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>个人博客</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
